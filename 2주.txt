기계 2주차.

벡터 numpy

벡터 : 선형 대수학에서의 기본 조각
방향성이 있다. 
크기와 방향이 같이 있다.
특정 변수의 속성을 추가 하고싶을 때도 가능하다.

matplotlib 라이브러리를 임포트
as plt로 plt 라 부름
plt.scatter(x,y, c='r') -> (x,y)쌍이 필요한 함수 그래프에 점이 찍힌다.c부분은 색상으로 빨간색으로 하겟다는 뜻.

plt.xlim(-40,40)
plt.ylim(-40,40)
x,y축의 범위를 지정해준다.
plt.grid(True)하면 격자무늬가 보임

plt.xlabel('a')
plt.ylabel('b')
x,y의 값은 어떤것인지 나타냄
plt.title('이름') 표의 이름을 지정

방향성을 나타내는것
plt.arro(x1,y1,x2,y2) (x1,y1) 부터 (x2,y2)까지 화살표가 생긴다.

3차원으로도 가능.
a = plt.figure().gca(projection = '3d')

a.plot([0,1],[0,4],[0,7], c='black') 이것은 (0,0,0)에서 부터 (1,4,7)까지 점을 찍겟다는 뜻이다.


벡터의 두가지 기본연산 : 벡터 합과 스칼라곱.
벡터합 : 두 벡터를 이어붙이기. 
2차원 좌표 평면
(1,2) + (3,-1) -> (4,-1)
결국 x1+x2,y1+y2 하면 벡터의 합이 나온다.
 
스칼라 곱
상수배 만큼 늘리는 것이다.
간단하게 각 값에 상수를 곱하면 된다.
(1,2) *3 하면 (3,6)
이것의 특징은 기울기는 계속 유지된다.(그래프의 특성?을 유지)


내적
벡터와 벡터의 곱
벡터 A,B이면 A*B와 같이 내적할 때 B를 A가 존재하는 방향 안으로 넣은 상태에서 크기를 곱하기.
외적 : B와 A모두가 존재하는 방향의 밖에서 크기를 곱하기.

내적을 하기 위해 투영을 한다.
투영 : 먼저 식 (A*B)에서 A를 B가 있는 방향 속으로 넣기.
A가 있는 공간으로 투영된 A와B의 크기를 서로 곱하기

내적값이 양수 : 두 벡터의 방향이 같을 경우
내적의 값 0 : 두 벡터가 수직
내적의 값 음수: 약 두 벡터가 방향이 반대


내적을 계산할 때 cos을 사용해서 계산
A*B 일 때 A*B*cos세타. -> 매번 계산하기 힘들다.
다음 방법을 이용한다.
(1,2) (3,4) 일때 
1*3 + 2*4의 결과를 내적으로 한다.

코드에서는 a,b벡터가 있을 때 
a@b하면 내적이 나온다.


벡터 매트릭스
행렬의 크기 모양 명령에 shape
행렬 객체에 대해 크기가 얼마인지 알려준다.
import numpy as np
a = np.array([[4,2],[2,6],[3,3])
a.shape 하면 (3,2) 즉 행이 3개 열이 2개의 행렬이 만들어진다.

3차로 만들려면 
a = np.array([[[4,2],[2,6], [3,3]] ,[[4,2],[2,6], [3,3]] ])
이런식으로 되어야 한다.


a.ndim 차원을 얘기한다. 즉 꺾세가 몇중인지 나타낸다고 보면 된다. 

행렬의 연산
행렬의 합은 사이즈가 같아야 한다.
각각의 원소의 위치값만 더해서 적어주면 된다.

스칼라의 곱의 경우는 각각의 원소에다가 상수를 곱해주면 된다.

원소 곱
1  1     2 100
-2 0     2 100

두 행렬을 곱할 경우각 원소들 끼리 곱해서 나오면 된다
2 200
-4 0

행렬 벡터 내적.
a b      x
c d      y
행렬   벡터
내적 할 때 
ax+by
cx+dy 
형태로 나온다.

기저벡터 : 두벡터(행렬)이 있는데 임의의 다른 백터로 만들고 싶을 때 그것이 가능한지. 

벡터와 행렬 혹은 행렬과 행렬을 내적하려면 내적하려는 두 벡터/행렬의 shape이 맞아야 한다.








